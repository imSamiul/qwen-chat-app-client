/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchUserImport } from './routes/search-user'
import { Route as ChatRoomImport } from './routes/chat-room'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticationRegisterImport } from './routes/authentication/register'
import { Route as AuthenticationLoginImport } from './routes/authentication/login'

// Create/Update Routes

const SearchUserRoute = SearchUserImport.update({
  id: '/search-user',
  path: '/search-user',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoomRoute = ChatRoomImport.update({
  id: '/chat-room',
  path: '/chat-room',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRegisterRoute = AuthenticationRegisterImport.update({
  id: '/authentication/register',
  path: '/authentication/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationLoginRoute = AuthenticationLoginImport.update({
  id: '/authentication/login',
  path: '/authentication/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chat-room': {
      id: '/chat-room'
      path: '/chat-room'
      fullPath: '/chat-room'
      preLoaderRoute: typeof ChatRoomImport
      parentRoute: typeof rootRoute
    }
    '/search-user': {
      id: '/search-user'
      path: '/search-user'
      fullPath: '/search-user'
      preLoaderRoute: typeof SearchUserImport
      parentRoute: typeof rootRoute
    }
    '/authentication/login': {
      id: '/authentication/login'
      path: '/authentication/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationLoginImport
      parentRoute: typeof rootRoute
    }
    '/authentication/register': {
      id: '/authentication/register'
      path: '/authentication/register'
      fullPath: '/authentication/register'
      preLoaderRoute: typeof AuthenticationRegisterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat-room': typeof ChatRoomRoute
  '/search-user': typeof SearchUserRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat-room': typeof ChatRoomRoute
  '/search-user': typeof SearchUserRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/chat-room': typeof ChatRoomRoute
  '/search-user': typeof SearchUserRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat-room'
    | '/search-user'
    | '/authentication/login'
    | '/authentication/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat-room'
    | '/search-user'
    | '/authentication/login'
    | '/authentication/register'
  id:
    | '__root__'
    | '/'
    | '/chat-room'
    | '/search-user'
    | '/authentication/login'
    | '/authentication/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoomRoute: typeof ChatRoomRoute
  SearchUserRoute: typeof SearchUserRoute
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
  AuthenticationRegisterRoute: typeof AuthenticationRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoomRoute: ChatRoomRoute,
  SearchUserRoute: SearchUserRoute,
  AuthenticationLoginRoute: AuthenticationLoginRoute,
  AuthenticationRegisterRoute: AuthenticationRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat-room",
        "/search-user",
        "/authentication/login",
        "/authentication/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chat-room": {
      "filePath": "chat-room.tsx"
    },
    "/search-user": {
      "filePath": "search-user.tsx"
    },
    "/authentication/login": {
      "filePath": "authentication/login.tsx"
    },
    "/authentication/register": {
      "filePath": "authentication/register.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
